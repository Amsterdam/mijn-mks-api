openapi: 3.0.0
info:
  version: 1.0.0
  title: BRP Informatie service
  description: Internal service for getting BRP details.
  contact:
    email: datapunt@amsterdam.nl
    name: Datapunt Support
    url: https://data.amsterdam.nl/
paths:
  /status/health:
    get:
      description: Endpoint for checking wheter the server has started.
      responses:
        '200':
          description: Returns "OK" when server is started
          content:
            application/json:
              schema:
                type: string
  /brp/kvk:
    get:
      description: Return KVK number of currently logged in user.
      responses:
        '200':
          description: KVK number
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kvk'
  /brp/bsn:
    get:
      description: Return BSN of currently logged in user.
      responses:
        '200':
          description: BSN
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bsn'
  /brp/brp/raw:
    get:
      description: Information of current user from "basisregistratie personen"
      responses:
        '200':
          description: Basisregistratiegegevens
          headers: {}
  /brp/brp:
    get:
      description: Information of current user from "basisregistratie personen"
      responses:
        '200':
          description: Basisregistratiegegevens
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brp'
  /brp/hr:
    get:
      description: Information of current user from "Handelsregister"
      responses:
        '200':
          description: Handelsregister
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hr'
  /brp/hr/raw:
    get:
      description: Information of current user from "Handelsregister"
      responses:
        '200':
          description: Handelsregister
          headers: {}
  /brp/aantal_bewoners:
    post:
      description: Number of residents living on address
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  residentCount:
                    type: integer
tags: []
servers:
  - url: https://mijn.amsterdam.nl
components:
  schemas:
    bsn:
      title: bsn
      type: object
      properties:
        burgerservicenummer:
          type: integer
      required:
        - burgerservicenummer
    kvk:
      title: bsn
      type: object
      properties:
        kvknummer:
          type: integer
      required:
        - kvknummer
    persoon:
      title: persoon
      type: object
      properties:
        omschrijvingAdellijkeTitel:
          $ref: '#/components/schemas/AdellijkeTitelPredikaat'
        aanduidingNaamgebruikOmschrijving:
          type: string
        bsn:
          type: string
        opgemaakteNaam:
          type: string
        geslachtsnaam:
          type: string
        voorvoegselGeslachtsnaam:
          type: string
        voornamen:
          type: string
        geboortelandnaam:
          type: string
        geboorteLand:
          type: integer
        geboorteplaatsnaam:
          type: string
        geboorteplaats:
          type: integer
        geboortedatum:
          type: string
          format: date-time
        gemeentenaamInschrijving:
          type: string
        omschrijvingGeslachtsaanduiding:
          $ref: '#/components/schemas/OmschrijvingGeslachtsaanduiding'
        geslachtsaanduiding:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        omschrijvingBurgerlijkeStaat:
          type: string
        mokum:
          description: True if person is living in Amsterdam
          type: boolean
        nationaliteiten:
          type: array
          items:
            $ref: '#/components/schemas/Nationaliteiten'
        vertrokkenOnbekendWaarheen:
          type: boolean
        datumVertrekUitNederland:
          description: This value can be used if `vertrokkenOnbekendWaarheen` is True
          type: string
          format: date-time
        emigratieLand:
          type: string
        omschrijvingIndicatieGeheim:
          type: string
        indicatieGeheim:
          type: boolean
    adres:
      title: adres
      type: object
      properties:
        begindatumVerblijf:
          type: string
          format: date-time
        einddatumVerblijf:
          type: string
          format: date-time
        huisnummer:
          type: string
        huisletter:
          type: string
        huisnummertoevoeging:
          type: string
        postcode:
          type: string
        straatnaam:
          type: string
        woonplaatsNaam:
          type: string
        landnaam:
          type: string
        adresBuitenland1:
          type: string
        adresBuitenland2:
          type: string
        adresBuitenland3:
          type: string
        inOnderzoek:
          type: boolean
        _adresSleutel:
          description: encrypted key to be used to get further information about adres
          type: string
    verbintenis:
      title: verbintenis
      type: object
      properties:
        datumOntbinding:
          type: string
          format: date-time
        datumSluiting:
          type: string
          format: date-time
        landnaamSluiting:
          type: string
        plaatsnaamSluitingOmschrijving:
          type: string
        soortVerbintenis:
          $ref: '#/components/schemas/SoortVerbintenis'
        soortVerbintenisOmschrijving:
          type: string
        redenOntbindingOmschrijving:
          type: string
        persoon:
          $ref: '#/components/schemas/partnerpersoon'
    kind:
      title: kind
      type: object
      properties:
        adellijkeTitelPredikaat:
          $ref: '#/components/schemas/AdellijkeTitelPredikaat'
        bsn:
          type: string
        geslachtsnaam:
          type: string
        voorvoegselGeslachtsnaam:
          type: string
        voornamen:
          type: string
        geboorteLand:
          type: integer
        geboorteplaats:
          type: integer
        geboortedatum:
          type: string
          format: date-time
        omschrijvingGeslachtsaanduiding:
          $ref: '#/components/schemas/OmschrijvingGeslachtsaanduiding'
        geslachtsaanduiding:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        overlijdensdatum:
          type: string
          format: date-time
    ouder:
      title: ouder
      type: object
      properties:
        adellijkeTitelPredikaat:
          $ref: '#/components/schemas/AdellijkeTitelPredikaat'
        bsn:
          type: string
        geslachtsnaam:
          type: string
        voorvoegselGeslachtsnaam:
          type: string
        voornamen:
          type: string
        geboorteLand:
          type: integer
        geboorteplaats:
          type: integer
        geboortedatum:
          type: string
          format: date-time
        omschrijvingGeslachtsaanduiding:
          $ref: '#/components/schemas/OmschrijvingGeslachtsaanduiding'
        geslachtsaanduiding:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        overlijdensdatum:
          type: string
          format: date-time
    brp:
      title: brp
      type: object
      properties:
        persoon:
          $ref: '#/components/schemas/persoon'
        adres:
          $ref: '#/components/schemas/adres'
        verbintenis:
          $ref: '#/components/schemas/verbintenis'
        ouders:
          type: array
          items:
            $ref: '#/components/schemas/ouder'
        kinderen:
          type: array
          items:
            $ref: '#/components/schemas/kind'
    Geslachtsaanduiding:
      title: Geslachtsaanduiding
      example: M
      type: string
      enum:
        - M
        - V
    AdellijkeTitelPredikaat:
      title: AdellijkeTitelPredikaat
      type: string
      enum:
        - Baron
        - Barones
        - Graaf
        - Gravin
        - Hertog
        - Hertogin
        - Jonkheer
        - Jonkvrouw
        - Markies
        - Markiezin
        - Prins
        - Prinses
        - Ridder
    Nationaliteiten:
      title: Nationaliteiten
      type: object
      properties:
        omschrijving:
          type: string
    OmschrijvingGeslachtsaanduiding:
      title: OmschrijvingGeslachtsaanduiding
      example: Man
      type: string
      enum:
        - Man
        - Vrouw
    partnerpersoon:
      title: Partner persoon
      type: object
      properties:
        bsn:
          type: string
        geboortedatum:
          type: string
          format: date-time
        geslachtsaanduiding:
          $ref: '#/components/schemas/OmschrijvingGeslachtsaanduiding'
        omschrijvingGeslachtsaanduiding:
          $ref: '#/components/schemas/OmschrijvingGeslachtsaanduiding'
        geslachtsnaam:
          type: string
        voornamen:
          type: string
        voorvoegselGeslachtsnaam:
          type: string
        geboorteLand:
          type: integer
        geboorteplaats:
          type: integer
        overlijdensdatum:
          type: string
          format: date-time
    SoortVerbintenis:
      title: SoortVerbintenis
      example: H
      type: string
      enum:
        - H
        - P
    hr:
      title: Handelsregister
      type: object
      properties:
        mokum:
          type: boolean
        onderneming:
          $ref: '#/components/schemas/Onderneming'
        eigenaar:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Eigenaar'
        rechtspersonen:
          type: array
          items:
            $ref: '#/components/schemas/Rechtspersoon'
        vestigingen:
          type: array
          items:
            $ref: '#/components/schemas/Vestiging'
        bestuurders:
          type: array
          items:
            $ref: '#/components/schemas/Bestuurder'
        gemachtigden:
          type: array
          items:
            $ref: '#/components/schemas/Gemachtigde'
        functionarissen:
          type: array
          items:
            $ref: '#/components/schemas/Functionaris'
    Onderneming:
      type: object
    Eigenaar:
      type: object
    Rechtspersoon:
      type: object
    Vestiging:
      type: object
    Bestuurder:
      type: object
    Gemachtigde:
      type: object
    Functionaris:
      type: object
